/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'opensearch.opensearchplugin'

opensearchplugin {
    name 'opensearch-querqy'
    description 'Query rewriting plugin'
    classname 'querqy.opensearch.QuerqyPlugin'
    licenseFile rootProject.file('LICENSE.txt')
    noticeFile rootProject.file('NOTICE.txt')
}

buildscript {

    ext {
        opensearch_version = System.getProperty("opensearch.version", "2.3.0")
    }

    repositories {
        mavenLocal()
        maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.opensearch.gradle:build-tools:${opensearch_version}"
    }
}

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
    isSnapshot = "true" == System.getProperty("build.snapshot", "true")
}

repositories {
    mavenLocal()
}

allprojects {
    group = "org.opensearch"

    version = "${opensearch_version}" - "-SNAPSHOT" + ".0"
    if (isSnapshot) {
        version += "-SNAPSHOT"
    }

    plugins.withId('java') {
        sourceCompatibility = targetCompatibility = "11"
    }
}


dependencies {
    api('org.querqy:querqy-lucene:5.4.lucene900.1')
    api('com.fasterxml.jackson.core:jackson-databind')
    api('com.fasterxml.jackson.core:jackson-core:2.13.3')
    api('com.fasterxml.jackson.core:jackson-annotations:2.13.3')
    api('com.jayway.jsonpath:json-path:2.7.0')
    implementation("commons-io:commons-io:2.11.0")
    implementation("org.querqy:querqy-core:3.14.1")
    implementation("net.minidev:json-smart:2.3")
    implementation("net.minidev:accessors-smart:1.2")
    implementation("org.ow2.asm:asm:5.0.4")
    implementation("org.slf4j:slf4j-api:1.7.25")


    testImplementation('junit:junit:4.13')
    testImplementation('org.mockito:mockito-core:4.7.0')
    testImplementation('org.apache.logging.log4j:log4j-core:2.17.1')
    testImplementation('org.assertj:assertj-core:3.15.0')
}

test {
    useJUnit()
    finalizedBy jacocoTestReport
    include "**/*Test.class"
    systemProperties 'java.security.policy': file("$projectDir/plugin-security.policy").absolutePath
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

configurations.all {
    resolutionStrategy.force 'junit:junit:4.13.2'
    resolutionStrategy.force'com.fasterxml.jackson.core:jackson-databind:2.13.3'
}

jar { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
sourcesJar { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }



licenseHeaders.enabled = true
// no need to validate pom, as we do not upload to maven/sonatype
validateNebulaPom.enabled = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false
// Allow @Test to be used in test classes not inherited from LuceneTestCase.
// see https://github.com/elastic/elasticsearch/blob/26c3dd6857d047054b2108f85bc2b040a9c81fe4/build-tools-internal/src/main/resources/forbidden/es-test-signatures.txt
forbiddenApis.ignoreFailures = true
// Allow test cases to be named Tests without having to be inherited from LuceneTestCase.
// see https://github.com/elastic/elasticsearch/blob/323f312bbc829a63056a79ebe45adced5099f6e6/buildSrc/src/main/java/org/elasticsearch/gradle/precommit/TestingConventionsTasks.java
testingConventions.enabled = false
loggerUsageCheck.enabled = false
